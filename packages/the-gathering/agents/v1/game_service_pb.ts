// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file agents/v1/game_service.proto (package agents.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message agents.v1.JoinGameRequest
 */
export class JoinGameRequest extends Message<JoinGameRequest> {
  /**
   * e.g. "FCoCBXMZr7OEGG3m/forest-office"
   *
   * @generated from field: string game_id = 1;
   */
  gameId = "";

  /**
   * e.g. "Room1"
   *
   * @generated from field: optional string room_id = 2;
   */
  roomId?: string;

  constructor(data?: PartialMessage<JoinGameRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "agents.v1.JoinGameRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "game_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "room_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JoinGameRequest {
    return new JoinGameRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JoinGameRequest {
    return new JoinGameRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JoinGameRequest {
    return new JoinGameRequest().fromJsonString(jsonString, options);
  }

  static equals(a: JoinGameRequest | PlainMessage<JoinGameRequest> | undefined, b: JoinGameRequest | PlainMessage<JoinGameRequest> | undefined): boolean {
    return proto3.util.equals(JoinGameRequest, a, b);
  }
}

/**
 * @generated from message agents.v1.JoinGameResponse
 */
export class JoinGameResponse extends Message<JoinGameResponse> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  constructor(data?: PartialMessage<JoinGameResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "agents.v1.JoinGameResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JoinGameResponse {
    return new JoinGameResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JoinGameResponse {
    return new JoinGameResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JoinGameResponse {
    return new JoinGameResponse().fromJsonString(jsonString, options);
  }

  static equals(a: JoinGameResponse | PlainMessage<JoinGameResponse> | undefined, b: JoinGameResponse | PlainMessage<JoinGameResponse> | undefined): boolean {
    return proto3.util.equals(JoinGameResponse, a, b);
  }
}

