syntax = "proto3";

package agents.v1;

service AgentService {
  // Interact is a bidirectional stream of agent actions and events.
  rpc Interact(stream PlayerEvent) returns (stream GameEvent) {}
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}
  rpc ProvisionAgent(ProvisionAgentRequest) returns (ProvisionAgentResponse) {}
}

message HealthCheckRequest { }
message HealthCheckResponse { }

message Player {
  enum AgentType {
    AGENT_TYPE_UNSPECIFIED = 0;
    AGENT_TYPE_HUMAN = 1;
    AGENT_TYPE_BOT = 2;
  }
  AgentType type = 1;
  string id = 2;
  string name = 3;

  int32 x = 4;
  int32 y = 5;
}

// Discriminated union of all events.
message GameEvent {
  oneof event {
    PlayerEvent player_event = 1;
  }
}

// Discriminated union of all agent actions.
message PlayerEvent {
  Player player = 1;
  oneof event {
    // A message was sent by an agent.
    Message message = 2;
    NearbyPlayers nearby_players = 3;
  }
}

// NearbyPlayers is a list of players near the agent.
message NearbyPlayers {
  repeated Player players = 1;
}

// A global chat message sent by an agent.
message Message {
  string content = 2;
}

message ProvisionAgentRequest {
  Player agent = 1;
}

message ProvisionAgentResponse {
  Player agent = 1;
}
